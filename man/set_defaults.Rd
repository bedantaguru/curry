% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/defaults.R
\name{set_defaults}
\alias{\%<?\%}
\alias{set_defaults}
\title{Change the defaults of a function}
\usage{
set_defaults(fun, defaults)

fun \%<?\% defaults
}
\arguments{
\item{fun}{A function whose argument default(s) should be changed}

\item{defaults}{A named list of values. The values will be set as default for
the arguments matching their name. Non-matching elements will be ignored}
}
\value{
A new function with changed defaults
}
\description{
The \code{set_defaults} function and the \code{\%<?\%} operator modifies the
defaults of a function, returning a new function. As such it can be thought
of as a soft partial application in that the arguments does not become fixed
and the arity doesn't change, but the arguments can be ignored when making
the final call.
}
\examples{
testfun <- function(x = 1, y = 2, z = 3) {
  x + y + z
}
testfun()

testfun2 <- testfun \%<?\% list(y = 10)
testfun2()

}

